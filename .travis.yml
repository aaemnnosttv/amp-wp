# Tell Travis CI we're using PHP
language: php

# Using trusty instead of precise because we don't need PHP 5.2 or 5.3 anymore.
dist: trusty

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  apt: true
  directories:
    - $HOME/.composer/cache
    - $HOME/.npm
    - $HOME/.nvm/.cache
    - $HOME/phpunit-bin
    - $HOME/deployment-targets

branches:
  only:
    - master
    - develop
    - /^\d+\.\d+$/

env:
  global:
    - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - PATH="$(pwd):$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.composer/vendor/bin:$PATH"
    - WP_CLI_BIN_DIR="$(pwd)"

before_install:
  - |
    if [[ -z $CODE_COVERAGE ]]; then
      phpenv config-rm xdebug.ini || echo "xdebug.ini does not exist."
    fi
  - |
    # Raise PHP memory limit to 2048MB
    echo 'memory_limit = 2048M' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - |
    if [[ ! -z $TEST_PHP ]]; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION

      # Install the specified version of PHPUnit depending on the PHP version:
      case "$TRAVIS_PHP_VERSION" in
        7.4snapshot|7.3|7.2|7.1|nightly)
          echo "Using PHPUnit 7.x"
          travis_retry composer global require "phpunit/phpunit:^7"
          ;;
        7.0)
          echo "Using PHPUnit 6.x"
          travis_retry composer global require "phpunit/phpunit:^6"
          ;;
        5.6|5.5|5.4)
          echo "Using PHPUnit 4.x"
          travis_retry composer global require "phpunit/phpunit:^4"
          ;;
        *)
          echo "No PHPUnit version handling for PHP version $TRAVIS_PHP_VERSION"
          exit 1
          ;;
      esac
    fi

install:
  - nvm install
  - npm install
  - |
    if [[ "$TRAVIS_BUILD_STAGE_NAME" != "Deploy" ]]; then
      travis_retry composer install --no-interaction --optimize-autoloader
    fi

script:
  - |
    if [[ ! -z $TEST_PHP ]]; then
      npm run build:js

      if [[ ! -z $CODE_COVERAGE ]]; then
        npm run test:php -- --coverage-clover build/logs/clover.xml
        bash <(curl -s https://codecov.io/bash) -cF javascript -f build/logs/clover.xml
      else
        npm run test:php
      fi
    fi
  - |
    if [[ ! -z "$PHPUNIT_EXTRA_GROUPS" ]]; then
      echo "Running phpunit group $PHPUNIT_EXTRA_GROUPS"
      if [[ ! -z $CODE_COVERAGE ]]; then
        npm run test:php -- --group $PHPUNIT_EXTRA_GROUPS --coverage-clover build/logs/clover.xml
        bash <(curl -s https://codecov.io/bash) -cF javascript -f build/logs/clover.xml
      else
        npm run test:php -- --group $PHPUNIT_EXTRA_GROUPS
      fi
    fi
  - |
    if [[ ! -z $TEST_JS ]]; then
      if [[ ! -z $CODE_COVERAGE ]]; then
        npm run test:js -- --ci --cacheDirectory="$HOME/.jest-cache" --collectCoverage
        bash <(curl -s https://codecov.io/bash) -cF javascript -f build/logs/lcov.info
      else
        npm run test:js -- --ci --cacheDirectory="$HOME/.jest-cache"
      fi
    fi

jobs:
  fast_finish: true
  allow_failures:
    - env: ALLOW_FAILURES=1
  include:
#    - stage: lint
#      name: Lint (PHP, JavaScript, and configuration files)
#      php: "7.3"
#      env: WP_VERSION=latest
#      before_script:
#        - composer global require --dev localheinz/composer-normalize --ignore-platform-reqs
#      script:
#        - composer validate --no-check-all
#        - composer normalize --dry-run
#        - npm run lint
#
#    - stage: test
#      name: JavaScript unit tests
#      php: "7.3"
#      env: WP_VERSION=latest TEST_JS=1
#
#    - name: E2E tests
#      php: "7.3"
#      env: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
#      script:
#        - npm run env:start
#        - npm run build:js
#        - npm run env:reset-site
#        - npm run test:e2e
#
#    - name: PHP unit tests w/ external-http (7.3, WordPress latest)
#      php: "7.3"
#      env: WP_VERSION=latest TEST_PHP=1 INSTALL_GB=1 INSTALL_PWA=1 PHPUNIT_EXTRA_GROUPS=external-http
#
#    - name: PHP unit tests  (7.2, WordPress latest)
#      php: "7.2"
#      env: WP_VERSION=latest TEST_PHP=1 INSTALL_GB=1 INSTALL_PWA=1
#
#    - name: PHP unit tests  (7.1, WordPress latest)
#      php: "7.1"
#      env: WP_VERSION=latest TEST_PHP=1 INSTALL_GB=1 INSTALL_PWA=1
#
#    - name: PHP unit tests  (7.0, WordPress latest)
#      php: "7.0"
#      env: WP_VERSION=latest TEST_PHP=1 INSTALL_GB=1 INSTALL_PWA=1
#
#    - name: PHP unit tests  (5.6, WordPress 5.1)
#      php: "5.6"
#      env: WP_VERSION=5.1 TEST_PHP=1 INSTALL_GB=1 INSTALL_PWA=1
#
#    - name: PHP unit tests  (5.5, WordPress 5.0)
#      php: "5.5"
#      env: WP_VERSION=5.0 TEST_PHP=1 INSTALL_GB=1
#
#    - name: PHP unit tests w/ external-http (5.4, WordPress 4.9)
#      php: "5.4"
#      env: WP_VERSION=4.9 TEST_PHP=1 PHPUNIT_EXTRA_GROUPS=external-http
#
#    - name: PHP unit tests (7.3, WordPress trunk)
#      php: "7.3"
#      env: WP_VERSION=trunk TEST_PHP=1 INSTALL_GB=1 INSTALL_PWA=1 ALLOW_FAILURES=1
#
#    - name: PHP unit tests (7.4 Alpha, WordPress trunk)
#      php: "7.4snapshot"
#      env: WP_VERSION=trunk TEST_PHP=1 INSTALL_GB=1 INSTALL_PWA=1 ALLOW_FAILURES=1
#
#    - name: PHP and JavaScript unit tests (7.3, WordPress trunk, with code coverage)
#      php: "7.3"
#      env: WP_VERSION=latest TEST_PHP=1 TEST_JS=1 INSTALL_GB=1 INSTALL_PWA=1 PHPUNIT_EXTRA_GROUPS=external-http CODE_COVERAGE=1

    - stage: deploy
      name: GitHub Release
      php: "5.4"
      script:
        #- set -e # Fail build as soon as one of the following commands fails.
        - npm run build:js
        - (cd .. && wp dist-archive $TRAVIS_BUILD_DIR $TRAVIS_BUILD_DIR/build/composer.zip --create-target-dir)
        - travis_retry composer install --no-interaction --no-dev --optimize-autoloader
        - (cd .. && wp dist-archive $TRAVIS_BUILD_DIR $TRAVIS_BUILD_DIR/build/amp.zip --create-target-dir)
      before_deploy:
        # Install WP-CLI for packaging the plugin
        - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        - chmod +x wp-cli.phar
        - mv wp-cli.phar wp
        - wp package install wp-cli/dist-archive-command

        # Set up git user name and tag this commit
        - git config --local user.name "Pascal Birchler"
        - git config --local user.email "pascalb@google.com"
        - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%dT%H%M%SZ')-$(git log --format=%h -1)}
        - git tag $TRAVIS_TAG
      deploy:
        provider: releases
        api_key:
          secure: TFO0R3efi4t7xzif+T+ZtLqcTIiNxWGLDlWnC6hWXjTjBFwSDbTuHufCixhNx7XgkkcnZlic1VAilvqQ87LLTtNc6WuRHNbAs/9XoZCEelrP78GOdBVQpvzhXDz2WFlLvbrOARKZIABGO04nMi7KJulamDsW3VYLGqTvflXfuzOr96F47sYZvahVEi5V28mmFRD+w/PWQdmLE9VxLstz1kNgxljV9DngEtw1EWBPHlCySwhUE/RyPQot1+yfA9HK6E1VYGlGBxVUAeEtoHvki/97+M7GB/0mHoUmqxZnJkDDyOwTDle9d1nP8xso3T+pQ+yGmuISE2DEqHjlZr4BVH6XABy2b35bMWuS28JMpMc1oahxJBUUkTzKTHEyO7U2cNmIgP7sz97gyYF8IZZebzuFI24auUjAds2BgFfhuYRdTf5N4akzhRn96JwD59YkXZRUpXOulVXI0I2BkFwLg3uZsge3FO76XyGf+emD10VXlpU4Vxvk5oAUfJJCfujIjf1v/sKhnUG2KjRITWndTggOngOzfUdBrA/X88HKcfvaYJDlFsGo+u4UG7zpV0QEyj4E9xAhns0iNRzo0/GH0jIZ4vDGB2sP5u+DuazbW2yY248cYuJTBJ2uCpRIhFzYBLEG2DlVBQqOH3v2AfIoai2Eh1+ztVlzvW0GZAyTXJU=
        file:
          - build/amp.zip
          - build/composer.zip
        skip_cleanup: true
        draft: true
        name: "Nightly build"
        body: "This is a nightly build."
        prerelease: true
        on:
          repo: swissspidy/amp-wp
          all_branches: true
